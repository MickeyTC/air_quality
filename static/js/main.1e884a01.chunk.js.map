{"version":3,"sources":["assets/logo.svg","assets/wind_direction.svg","assets/humidity.svg","assets/ic-face-green.svg","assets/ic-face-yellow.svg","assets/ic-face-orange.svg","assets/ic-face-red.svg","assets/ic-face-purple.svg","assets/ic-face-maroon.svg","assets/add.svg","assets/delete.svg","Loading.js","utils.js","LocationForm.js","AqiCard.js","LocationList.js","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","div","rotate","keyframes","Img","img","Loading","props","src","loading","alt","KEY","process","joinStrings","separator","strings","filter","Boolean","map","s","trim","join","convertToSelectOptions","values","value","label","getNearData","a","axios","get","res","data","console","error","refreshData","locations","Promise","allSettled","city","state","country","i","status","getAqiCity","getCountries","getStates","getCities","useCountriesState","createPersistedState","useStatesState","useCitiesState","Container","Label","LocationSelect","Select","ErrorText","Button","isShowError","disabled","LocationForm","initialLocation","onAdd","countries","setCountries","states","setStates","cities","setCities","useState","selectedCountry","setSelectedCountry","selectedState","setSelectedState","selectedCity","setSelectedCity","loadingCountries","setLoadingCountries","loadingStates","setLoadingStates","loadingCities","setLoadingCities","setIsShowError","useEffect","countriesOptions","statesOptions","citiesOptions","onDuplicate","isDisabledButton","name","options","tabIndex","find","option","onChange","isDisabled","isLoading","length","onClick","memo","Box","Info","LocationBox","CityInfo","StateInfo","PollutionBox","color","backgroundColor","background","height","FaceAqi","AqiInfo","AqiValue","AqiTitle","ConditionInfo","WeatherBox","WeatherValue","WeatherIcon","WindDirection","direction","HumidityIcon","AqiCard","current","weather","tp","hu","ws","wd","ic","pollution","aqius","aqicn","useUSAqi","aqi","face","faceGreen","condition","styleProps","faceYellow","faceOrange","faceRed","facePurple","faceMaroon","getAqiStyle","undefined","windDirection","toFixed","humidity","isDragging","LocationList","droppableId","provided","ref","innerRef","droppableProps","location","index","draggableId","snapshot","draggableProps","dragHandleProps","placeholder","useLocationsState","StyledModal","className","contentClassName","overlayClassName","portalClassName","DeleteWrapper","isDraggingOver","isLimit","AddWrapper","AddButton","AddIcon","DeleteIcon","App","setLocations","setLoading","isShowForm","setIsShowForm","setDragging","onClickAdd","onAddLocation","isOpen","onRequestClose","ariaHideApp","closeTimeoutMS","onDragEnd","result","source","destination","sIndex","sId","dIndex","dId","slice","newLocations","splice","sItem","onBeforeDragStart","deleteIcon","addIcon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e884a01.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/wind_direction.c11c3285.svg\";","export default __webpack_public_path__ + \"static/media/humidity.47ec3db9.svg\";","export default __webpack_public_path__ + \"static/media/ic-face-green.0d991722.svg\";","export default __webpack_public_path__ + \"static/media/ic-face-yellow.5d32eb54.svg\";","export default __webpack_public_path__ + \"static/media/ic-face-orange.ced8dbd8.svg\";","export default __webpack_public_path__ + \"static/media/ic-face-red.d9b273d2.svg\";","export default __webpack_public_path__ + \"static/media/ic-face-purple.5fa45d80.svg\";","export default __webpack_public_path__ + \"static/media/ic-face-maroon.53b47c0f.svg\";","export default __webpack_public_path__ + \"static/media/add.c235419e.svg\";","export default __webpack_public_path__ + \"static/media/delete.7053c604.svg\";","import styled, { keyframes } from 'styled-components'\nimport { loading } from './assets'\n\nconst Wrapper = styled.div`\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  background-color: #00000066;\n  z-index: 100;\n`\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst Img = styled.img`\n  height: 40vmin;\n  width: 40vmin;\n  pointer-events: none;\n  animation: ${rotate} infinite 5s linear;\n`\n\nconst Loading = props => {\n  return (\n    <Wrapper>\n      <Img src={loading} alt='loading' />\n    </Wrapper>\n  )\n}\n\nexport default Loading\n","import axios from 'axios'\n\nconst KEY = process.env.REACT_APP_API_KEY\n\nconst joinStrings = (separator = ' ') => (...strings) =>\n  strings\n    .filter(Boolean)\n    .map(s => s.trim())\n    .join(separator)\n\nconst convertToSelectOptions = (values = []) =>\n  values?.map(value => ({ value, label: value }))\n\nconst getNearData = async () => {\n  try {\n    const res = await axios.get(\n      `https://api.airvisual.com/v2/nearest_city?key=${KEY}`\n    )\n    return res?.data?.data\n  } catch (e) {\n    console.error(e)\n  }\n}\n\nconst refreshData = async locations => {\n  try {\n    const res = await Promise.allSettled(\n      locations.map(({ city, state, country }) =>\n        axios.get(\n          `https://api.airvisual.com/v2/city?city=${city}&state=${state}&country=${country}&key=${KEY}`\n        )\n      )\n    )\n    return res.map(({ status, value }, i) =>\n      status === 'fulfilled' ? value?.data?.data : locations[i]\n    )\n  } catch (e) {\n    console.error(e)\n  }\n}\n\nconst getAqiCity = async ({ country, state, city }) => {\n  try {\n    const res = await axios.get(\n      `https://api.airvisual.com/v2/city?city=${city}&state=${state}&country=${country}&key=${KEY}`\n    )\n    return res?.data?.data\n  } catch (e) {\n    console.error(e)\n  }\n}\n\nconst getCountries = async () => {\n  try {\n    const res = await axios.get(\n      `https://api.airvisual.com/v2/countries?key=${KEY}`\n    )\n    return res?.data?.data?.map(({ country }) => country)\n  } catch (e) {\n    console.error(e)\n  }\n}\n\nconst getStates = async country => {\n  try {\n    const res = await axios.get(\n      `https://api.airvisual.com/v2/states?country=${country}&key=${KEY}`\n    )\n    return res?.data?.data?.map(({ state }) => state)\n  } catch (e) {\n    console.error(e)\n  }\n}\n\nconst getCities = async (state, country) => {\n  try {\n    const res = await axios.get(\n      `https://api.airvisual.com/v2/cities?state=${state}&country=${country}&key=${KEY}`\n    )\n    return res?.data?.data?.map(({ city }) => city)\n  } catch (e) {\n    console.error(e)\n  }\n}\n\nexport {\n  getNearData,\n  refreshData,\n  getAqiCity,\n  joinStrings,\n  convertToSelectOptions,\n  getCountries,\n  getStates,\n  getCities,\n}\n","import React, { memo, useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport Select from 'react-select'\nimport styled from 'styled-components'\nimport createPersistedState from 'use-persisted-state'\nimport {\n  convertToSelectOptions,\n  getCities,\n  getCountries,\n  getStates,\n  joinStrings,\n} from './utils'\n\nconst useCountriesState = createPersistedState('countries')\nconst useStatesState = createPersistedState('states')\nconst useCitiesState = createPersistedState('cities')\n\nconst Container = styled.div`\n  background-color: rgb(255, 255, 245);\n  padding: 2em;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 40vw;\n  min-width: 250px;\n  max-width: 500px;\n  z-index: 51;\n`\n\nconst Wrapper = styled.div`\n  margin: 0.8em;\n  width: 100%;\n`\n\nconst Label = styled.div`\n  color: #333333;\n  font-weight: 600;\n  font-size: 1.1em;\n  margin-bottom: 0.4em;\n`\n\nconst LocationSelect = styled(Select)``\n\nconst ErrorText = styled.div`\n  text-align: center;\n  color: red;\n  margin: 1em 0 1em 0;\n`\n\nconst Button = styled.div`\n  text-align: center;\n  width: 5em;\n  padding: 5px 15px;\n  font-weight: 500;\n  line-height: 1.75;\n  border-radius: 4px;\n  outline: 0;\n  text-transform: uppercase;\n  transition: ease background-color 250ms;\n  border: 0;\n  ${({ isShowError }) =>\n    isShowError ? 'margin: 0.5em;' : 'margin: 1.5em 0.5em 0.5em 0.5em;'}\n  ${({ disabled }) =>\n    disabled\n      ? `\n      cursor: default;\n      color: rgba(0, 0, 0, 0.26);\n      box-shadow: none;\n      background-color: rgba(0, 0, 0, 0.12);\n    `\n      : `\n    cursor: pointer;\n    color: #ffffff;\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n      0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n    background-color: #1976d2;\n    &:hover {\n      background-color: #115293;\n      box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n        0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n    }\n    &:active {\n      background-color: #0b3661;\n      box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2),\n        0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n    }\n  `}\n`\n\nconst LocationForm = props => {\n  const { initialLocation = {}, onAdd = () => {} } = props\n  const [countries, setCountries] = useCountriesState()\n  const [states, setStates] = useStatesState()\n  const [cities, setCities] = useCitiesState()\n\n  const [selectedCountry, setSelectedCountry] = useState(\n    initialLocation?.country\n  )\n  const [selectedState, setSelectedState] = useState(initialLocation?.state)\n  const [selectedCity, setSelectedCity] = useState(initialLocation?.city)\n\n  const [loadingCountries, setLoadingCountries] = useState(false)\n  const [loadingStates, setLoadingStates] = useState(false)\n  const [loadingCities, setLoadingCities] = useState(false)\n  const [isShowError, setIsShowError] = useState(false)\n\n  useEffect(() => {\n    ;(async () => {\n      if (!countries) {\n        setLoadingCountries(true)\n        setCountries(await getCountries())\n        setLoadingCountries(false)\n      }\n    })()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    ;(async () => {\n      const country = selectedCountry\n      if (country && !states?.[country]) {\n        setLoadingStates(true)\n        const data = await getStates(country)\n        setStates(states => ({ ...states, [country]: data }))\n        setLoadingStates(false)\n      }\n    })()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedCountry])\n\n  useEffect(() => {\n    ;(async () => {\n      const country = selectedCountry\n      const state = selectedState\n      if (country && state && !cities?.[country]?.[state]) {\n        setLoadingCities(true)\n        const data = await getCities(state, country)\n        setCities(cities => ({\n          ...cities,\n          [country]: cities?.[country]\n            ? { ...cities[country], [state]: data }\n            : { [state]: data },\n        }))\n        setLoadingCities(false)\n      }\n    })()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedState])\n\n  const onSelectCountry = option => {\n    if (option.value === selectedCountry) return\n    setSelectedCountry(option.value)\n    setSelectedState('')\n    setSelectedCity('')\n    setIsShowError(false)\n  }\n\n  const onSelectState = option => {\n    if (option.value === selectedState) return\n    setSelectedState(option.value)\n    setSelectedCity('')\n    setIsShowError(false)\n  }\n\n  const onSelectCity = option => {\n    if (option.value === selectedCity) return\n    setSelectedCity(option.value)\n    setIsShowError(false)\n  }\n\n  const countriesOptions = convertToSelectOptions(countries)\n  const statesOptions = convertToSelectOptions(states?.[selectedCountry])\n  const citiesOptions = convertToSelectOptions(\n    cities?.[selectedCountry]?.[selectedState]\n  )\n\n  const onDuplicate = () => {\n    setIsShowError(true)\n  }\n\n  const onClickAdd = () =>\n    onAdd(\n      {\n        country: selectedCountry,\n        state: selectedState,\n        city: selectedCity,\n      },\n      onDuplicate\n    )\n\n  const isDisabledButton =\n    !selectedCountry || !selectedState || !selectedCity || isShowError\n\n  return (\n    <Container>\n      <Wrapper>\n        <Label>{'Country'}</Label>\n        <LocationSelect\n          name='country'\n          options={countriesOptions}\n          tabIndex='0'\n          value={\n            countriesOptions.find(option => option.value === selectedCountry) ||\n            ''\n          }\n          onChange={onSelectCountry}\n          isDisabled={loadingCountries}\n          isLoading={loadingCountries}\n        />\n      </Wrapper>\n      <Wrapper>\n        <Label>{'State'}</Label>\n        <LocationSelect\n          name='state'\n          options={statesOptions}\n          tabIndex='1'\n          value={\n            statesOptions.find(option => option.value === selectedState) || ''\n          }\n          onChange={onSelectState}\n          isDisabled={loadingStates || !statesOptions.length}\n          isLoading={loadingStates}\n        />\n      </Wrapper>\n      <Wrapper>\n        <Label>{'City'}</Label>\n        <LocationSelect\n          name='city'\n          options={citiesOptions}\n          tabIndex='2'\n          value={\n            citiesOptions.find(option => option.value === selectedCity) || ''\n          }\n          onChange={onSelectCity}\n          isDisabled={loadingCities || !citiesOptions.length}\n          isLoading={loadingCities}\n        />\n      </Wrapper>\n      {isShowError && (\n        <ErrorText>{`${joinStrings(', ')(\n          selectedCity,\n          selectedState,\n          selectedCountry\n        )} is already shown.`}</ErrorText>\n      )}\n      <Button\n        onClick={!isDisabledButton ? onClickAdd : () => {}}\n        disabled={isDisabledButton}\n        isShowError={isShowError}\n      >\n        {'ADD'}\n      </Button>\n    </Container>\n  )\n}\n\nLocationForm.propTypes = {\n  initialLocation: PropTypes.shape({\n    city: PropTypes.string,\n    state: PropTypes.string,\n    country: PropTypes.string,\n  }),\n  onAdd: PropTypes.func,\n}\n\nexport default memo(LocationForm)\n","import PropTypes from 'prop-types'\nimport { memo } from 'react'\nimport styled from 'styled-components'\nimport {\n  faceGreen,\n  faceMaroon,\n  faceOrange,\n  facePurple,\n  faceRed,\n  faceYellow,\n  humidity,\n  windDirection,\n} from './assets'\nimport { joinStrings } from './utils'\n\nconst getAqiStyle = aqi => {\n  if (aqi <= 50) {\n    return {\n      face: faceGreen,\n      condition: 'Good',\n      styleProps: { color: '#607631', background: '#a8e05f' },\n    }\n  } else if (aqi <= 100) {\n    return {\n      face: faceYellow,\n      condition: 'Moderate',\n      styleProps: { color: '#8c6c1d', background: '#ffdf58' },\n    }\n  } else if (aqi <= 150) {\n    return {\n      face: faceOrange,\n      condition: 'Unhealthy for sensitive groups',\n      styleProps: { color: '#974a20', background: '#ff9b57' },\n    }\n  } else if (aqi <= 200) {\n    return {\n      face: faceRed,\n      condition: 'Unhealthy',\n      styleProps: { color: '#942431', background: '#fe6a69' },\n    }\n  } else if (aqi <= 300) {\n    return {\n      face: facePurple,\n      condition: 'Very unhealthy',\n      styleProps: { color: '#543b63', background: '#a97abc' },\n    }\n  } else if (aqi > 300) {\n    return {\n      face: faceMaroon,\n      condition: 'Hazardous',\n      styleProps: { color: '#573344', background: '#a87383' },\n    }\n  }\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  color: #333333;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n`\n\nconst Box = styled.div`\n  display: flex;\n  padding: 1em;\n`\n\nconst Info = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 1 1 0;\n`\n\nconst LocationBox = styled(Box)`\n  flex-direction: column;\n  background-color: rgb(255, 255, 245);\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n`\n\nconst CityInfo = styled(Info)`\n  font-size: 1.5em;\n  font-weight: 700;\n`\n\nconst StateInfo = styled(Info)`\n  font-weight: 500;\n  color: #666666;\n  margin-top: 0.2em;\n`\n\nconst PollutionBox = styled(Box)(({ color, background }) => ({\n  color,\n  backgroundColor: background || 'rgb(255, 255, 245)',\n  height: '4.5em',\n}))\n\nconst FaceAqi = styled.img`\n  height: 4em;\n`\n\nconst AqiInfo = styled(Info)`\n  flex-direction: column;\n`\n\nconst AqiValue = styled.div`\n  font-size: 2.5em;\n  font-weight: 400;\n`\n\nconst AqiTitle = styled.div`\n  font-size: 0.8em;\n  font-weight: 500;\n`\n\nconst ConditionInfo = styled(Info)`\n  font-weight: 600;\n  font-size: 1.2em;\n`\n\nconst WeatherBox = styled(Box)`\n  background-color: honeydew;\n  border-bottom-left-radius: 10px;\n  border-bottom-right-radius: 10px;\n`\n\nconst WeatherValue = styled.div`\n  margin-left: 0.5em;\n  font-weight: 500;\n  font-size: 1.1em;\n`\n\nconst WeatherIcon = styled.img`\n  height: 3em;\n`\n\nconst WindDirection = styled.img`\n  height: 1.5em;\n  transform: rotate(${({ direction }) => direction}deg);\n`\n\nconst HumidityIcon = styled.img`\n  height: 1.5em;\n`\n\nconst AqiCard = props => {\n  const {\n    data: {\n      city = '',\n      state = '',\n      country = '',\n      current: {\n        weather: { tp, hu, ws, wd, ic } = {},\n        pollution: { aqius, aqicn } = {},\n      } = {},\n    } = {},\n    useUSAqi = true,\n  } = props\n\n  const aqi = useUSAqi ? aqius : aqicn\n  const { face, condition, styleProps } = getAqiStyle(aqi) || {}\n\n  return (\n    <Container>\n      <LocationBox>\n        <CityInfo>{city}</CityInfo>\n        <StateInfo>{joinStrings(', ')(state, country)}</StateInfo>\n      </LocationBox>\n      <PollutionBox {...styleProps}>\n        <Info>{!!face && <FaceAqi src={face} alt='face' />}</Info>\n        <AqiInfo>\n          {aqi !== undefined && (\n            <>\n              <AqiValue>{aqi}</AqiValue>\n              <AqiTitle>{useUSAqi ? 'US AQI' : 'CN AQI'}</AqiTitle>\n            </>\n          )}\n        </AqiInfo>\n        <ConditionInfo>{condition}</ConditionInfo>\n      </PollutionBox>\n      <WeatherBox>\n        <Info>\n          {!!ic && (\n            <WeatherIcon\n              src={`https://www.airvisual.com/images/${ic}.png`}\n              alt={`icon-${ic}`}\n            />\n          )}\n          {tp !== undefined && <WeatherValue>{`${tp}°C`}</WeatherValue>}\n        </Info>\n        <Info>\n          {wd !== undefined && (\n            <WindDirection\n              direction={wd}\n              src={windDirection}\n              alt='wind-direction'\n            />\n          )}\n          {ws !== undefined && (\n            <WeatherValue>{`${(ws * 3.6).toFixed(1)} km/h`}</WeatherValue>\n          )}\n        </Info>\n        <Info>\n          {hu !== undefined && (\n            <>\n              <HumidityIcon src={humidity} alt='humidity-icon' />\n              <WeatherValue>{`${hu}%`}</WeatherValue>\n            </>\n          )}\n        </Info>\n      </WeatherBox>\n    </Container>\n  )\n}\n\nAqiCard.propTypes = {\n  data: PropTypes.shape({\n    city: PropTypes.string,\n    state: PropTypes.string,\n    country: PropTypes.string,\n    current: PropTypes.shape({\n      weather: PropTypes.shape({\n        tp: PropTypes.number,\n        hu: PropTypes.number,\n        ws: PropTypes.number,\n        wd: PropTypes.number,\n        ic: PropTypes.string,\n      }),\n      pollution: PropTypes.shape({\n        aqius: PropTypes.number,\n        aqicn: PropTypes.number,\n      }),\n    }),\n  }),\n  useUSAqi: PropTypes.bool,\n}\n\nexport default memo(AqiCard)\n","import PropTypes from 'prop-types'\nimport { memo } from 'react'\nimport { Draggable, Droppable } from 'react-beautiful-dnd'\nimport styled from 'styled-components'\nimport AqiCard from './AqiCard'\n\nconst Container = styled.div`\n  width: 60vw;\n  min-width: 400px;\n  max-width: 650px;\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: 17em;\n  padding-bottom: 1em;\n  ${({ isDragging }) => (isDragging ? 'opacity: 0.5;' : '')}\n`\n\nconst LocationList = props => {\n  const { locations = [], droppableId } = props\n\n  return (\n    <Droppable droppableId={droppableId}>\n      {provided => (\n        <Container ref={provided.innerRef} {...provided.droppableProps}>\n          {locations.map((location, index) => (\n            <Draggable\n              draggableId={`${location?.city}-${location?.state}-${location?.country}`}\n              key={`${location?.city}-${location?.state}-${location?.country}`}\n              index={index}\n            >\n              {(provided, snapshot) => (\n                <Wrapper\n                  {...provided.draggableProps}\n                  {...provided.dragHandleProps}\n                  ref={provided.innerRef}\n                  isDragging={snapshot.isDragging}\n                >\n                  <AqiCard data={location} />\n                </Wrapper>\n              )}\n            </Draggable>\n          ))}\n          {provided.placeholder}\n        </Container>\n      )}\n    </Droppable>\n  )\n}\n\nLocationList.propTypes = {\n  locations: PropTypes.arrayOf(\n    PropTypes.shape({\n      city: PropTypes.string,\n      state: PropTypes.string,\n      country: PropTypes.string,\n    })\n  ),\n  droppableId: PropTypes.string.isRequired,\n}\n\nexport default memo(LocationList)\n","import { useEffect, useState } from 'react'\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\nimport styled from 'styled-components'\nimport createPersistedState from 'use-persisted-state'\nimport ReactModal from 'react-modal'\nimport Loading from './Loading'\nimport LocationForm from './LocationForm'\nimport LocationList from './LocationList'\nimport { getAqiCity, getNearData, refreshData } from './utils'\nimport { addIcon, deleteIcon } from './assets'\n\nconst useLocationsState = createPersistedState('locations')\n\nconst Container = styled.div`\n  background-color: #282c34;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: max-content;\n  min-height: 100vh;\n  padding: 1.5em;\n`\nconst ReactModalAdapter = ({ className, ...props }) => {\n  const contentClassName = `${className}__content`\n  const overlayClassName = `${className}__overlay`\n  return (\n    <ReactModal\n      portalClassName={className}\n      className={contentClassName}\n      overlayClassName={overlayClassName}\n      {...props}\n    />\n  )\n}\n\nconst StyledModal = styled(ReactModalAdapter)`\n  &__overlay {\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n    bottom: 0px;\n    background-color: #00000066;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    opacity: 0;\n    transition: opacity 200ms ease-in-out;\n    &.ReactModal__Overlay--after-open {\n      opacity: 1;\n    }\n    &.ReactModal__Overlay--before-close {\n      opacity: 0;\n    }\n  }\n  &__content {\n    outline: none;\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 60vw;\n  min-width: 400px;\n  max-width: 650px;\n  height: 17em;\n  border-radius: 10px;\n  transition: background-color 50ms ease-in, border 50ms ease-in;\n`\n\nconst DeleteWrapper = styled(Wrapper)`\n  ${({ isDragging, isDraggingOver, isLimit }) => {\n    if (isDraggingOver) {\n      return `\n        background-color: #ff00004d;\n        border: 1px solid #ff0000;\n      `\n    }\n    if (isLimit && !isDragging) {\n      return `\n        background-color: transparent;\n        border: 1px solid #ff0000;\n      `\n    }\n    return `\n      background-color: #ff000012;\n      border: 1px solid #ff0000c7;\n    `\n  }}}\n`\n\nconst AddWrapper = styled(Wrapper)`\n  &:hover {\n    background-color: #8bfffd2b;\n  }\n  background-color: #8bfffd12;\n  border: 1px solid #fffff55c;\n`\n\nconst AddButton = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 5em;\n  height: 5em;\n  border-radius: 2.5em;\n  outline: 0;\n  transition: ease background-color 250ms;\n  border: 0;\n  ${({ disabled }) =>\n    disabled\n      ? `\n      cursor: default;\n      box-shadow: none;\n      background-color: rgba(0, 0, 0, 0.12);\n    `\n      : `\n    cursor: pointer;\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n      0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n    background-color: #29b1a8;\n    &:hover {\n      background-color: #1a6f69;\n      box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n        0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n    }\n    &:active {\n      background-color: #145652;\n      box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2),\n        0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n    }\n  `}\n`\n\nconst AddIcon = styled.img`\n  width: 4em;\n  height: 4em;\n  opacity: 0.8;\n`\n\nconst DeleteIcon = styled.img`\n  position: absolute;\n  width: 8em;\n  height: 8em;\n`\n\nconst App = () => {\n  const [locations, setLocations] = useLocationsState([])\n  const [loading, setLoading] = useState(false)\n  const [isShowForm, setIsShowForm] = useState(false)\n  const [isDragging, setDragging] = useState(false)\n\n  useEffect(() => {\n    ;(async () => {\n      setLoading(true)\n      if (!locations.length) {\n        const data = await getNearData()\n        if (data) setLocations([data])\n      } else {\n        setLocations(await refreshData(locations))\n      }\n      setLoading(false)\n    })()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onDragEnd = result => {\n    setDragging(false)\n    const { source, destination } = result || {}\n    if (!destination || !source) return\n    const { index: sIndex, droppableId: sId } = source\n    const { index: dIndex, droppableId: dId } = destination\n    if (sId === 'locations' && dId === 'delete') {\n      setLocations(locations => [\n        ...locations.slice(0, sIndex),\n        ...locations.slice(sIndex + 1),\n      ])\n    } else if (sId === 'locations' && dId === 'locations') {\n      if (sIndex === dIndex) return\n      setLocations(locations => {\n        const newLocations = [...locations]\n        const [sItem] = newLocations.splice(sIndex, 1)\n        newLocations.splice(dIndex, 0, sItem)\n        return newLocations\n      })\n    }\n  }\n\n  const onBeforeDragStart = () => {\n    setDragging(true)\n  }\n\n  const onClickAdd = () => {\n    setIsShowForm(true)\n  }\n\n  const hideForm = () => {\n    setIsShowForm(false)\n  }\n\n  const onAddLocation = async (\n    { country, state, city },\n    onDuplicate = () => {}\n  ) => {\n    if (\n      locations.find(\n        location =>\n          location.country === country &&\n          location.state === state &&\n          location.city === city\n      )\n    ) {\n      onDuplicate()\n      return\n    }\n    setIsShowForm(false)\n    setLoading(true)\n    const location = await getAqiCity({ country, state, city })\n    if (location) setLocations(locations => [...locations, location])\n    setLoading(false)\n  }\n\n  return (\n    <Container>\n      {loading && <Loading />}\n      <StyledModal\n        isOpen={isShowForm}\n        onRequestClose={hideForm}\n        ariaHideApp={false}\n        closeTimeoutMS={200}\n      >\n        <LocationForm initialLocation={locations[0]} onAdd={onAddLocation} />\n      </StyledModal>\n      <DragDropContext\n        onDragEnd={onDragEnd}\n        onBeforeDragStart={onBeforeDragStart}\n      >\n        <LocationList locations={locations} droppableId='locations' />\n        <Droppable droppableId='delete'>\n          {(provided, { isDraggingOver }) => (\n            <div ref={provided.innerRef} {...provided.droppableProps}>\n              {isDragging || locations.length >= 5 ? (\n                <DeleteWrapper\n                  isDraggingOver={isDraggingOver}\n                  isDragging={isDragging}\n                  isLimit={locations.length >= 5}\n                >\n                  <DeleteIcon src={deleteIcon} alt='delete' />\n                  {provided.placeholder}\n                </DeleteWrapper>\n              ) : (\n                <AddWrapper>\n                  <AddButton onClick={onClickAdd}>\n                    <AddIcon src={addIcon} alt='add' />\n                  </AddButton>\n                  {provided.placeholder}\n                </AddWrapper>\n              )}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </Container>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}